devBind.txt 0.0.18                    UTF-8                        2016-11-15
---------1---------2---------3---------4---------5---------6---------7-------*

    <https://github.com/orcmid/Adv10>/dev/VCbinder/devBind/devBind.txt>

                             VCBIND.ZIP CONSTRUCTION
                             =======================
                             
    The files and the VCbind.zip here are in-progress development versions. 
    For the latest version considered stable for general use, check the
    parent VCbinder/ folder for how VCbinder/devBind is used and the version
    of VCbind.zip incorporated there.

    Folder devBind/ provides the files for under-development maintenance,
    testing, and delivery of a VCbind.zip drop-in for use in software
    source-code construction sets.  VCbinder and its development in the
    nearby VCbinder/devBinder/ folder illustrates one way to accomplish 
    that in the routine development of construction sets.
    
    The details of VCbind.zip and its usage are in the file VCbind.txt.
    That file is part of the VCbind.zip content.  It can be useful to also 
    include VCbind.txt as a companion file with VCbind.zip so users can
    determine how to proceed before extracting VCbind.zip content itself.
    
    More about the variety of ways that VCbind.zip may be useful can be
    found in source-code constructions sets for building Microsoft
    Windows programs from simple C/C++ source-code configurations.
    
    The extensive treatment of what is commonly handled by tacit under-
    standing illustrates toolcraft and what goes into making a reproducible
    reproducible and confirmable component in open-source code.  The goal
    is for someone without the capability to have developed VCbind themselves
    be guided in how to use it, successfully confirm its functioning,
    and make adjustments/adaptations where that is desired.  
       
    NOTE: When there is development, maintenance, and testing underway 
    in the origin devBind/ folder, the working versions of VCbind.txt,
    VCbind.bat, VCbind.zip, and other devBind artifacts can be inconsistent
    until a stable case is reached.
    
    
USING VCBIND.ZIP

    The VCbind.txt file of a given VCbind.zip provides the instructions for
    its usage in a construction set that employs VCbind.  

    To obtain the current VCbind recommended for general usage, consult
    <http://nfoWare.com/dev/2016/11/d161101b.htm>.  Guidance on inclusion
    of VCbind in new construction sets can be found in the VCbinder/ folder
    above and at <http://nfoWare.com/dev/2016/11/d161101b.htm>.
    
    
PREREQUISITE CAPABILITIES FOR VCBIND DEVELOPMENT WORK

    If you are inexperienced with use of the Windows command shell, of the 
    Visual C/C++ compiler, and of related command-line tools, familiarization
    with operation of VCbind can be gained by using it as provided in an
    existing construction set.  Practice with any construction set that
    produces a simple command-line program from a stable source code release.
    
    The next level of skill might be going through the testing and confirma- 
    tion of VCbind.zip as provided in its distributions.

    Then inspect this devBind material.  Review and test the maintenance
    procedure, identifying questions that need to be resolved.  Determine
    capabilities to work on, if any.  
      
    Going deeper may involve expanding skills in several areas.  The 
    following checklist can be used to assess where study and experience
    may be needed.
    
     * Working with the source-code management system, if any, that this
       source code folder originates at, currently the GitHub project at
       <http://github.com/orcmid/Adv10>.
    
     * Performing console (cmd.exe) command-line sessions on Microsoft 
       Windows  
       
     * Editing of text and batch (.bat) files in a manner that preserves
       formatting and conventions for them
    
     * Experience with the built-in Compressed (zipped) Folder support of
       Microsoft Windows.  Optional use of alternative compression software
       in a manner that is compatible with the built-in provisions.
    
     * Demonstrating the testing and confirmation of VCbind.bat operation,
       including all of the exception cases
    
     * Using the Microsoft cl.exe command-line compiler in demonstration of
       successful VCbind accomplishment
       
     * Optionally creating shortcuts to batch files and customizing the
       console session's properties
  
     * Further understanding and using the command-line environment of 
       Windows and how the Visual C++ components are found and operated on
       Windows
    
  
DEVBIND EMHANCEMENT AND MAINTENANCE CODE-AND-TEST CYCLE

  1. Have this source code folder in a PC location where you can edit all 
     of its content.  If the folder is not named devBind\, adjust what 
     follows below accordingly.  It is recommended that you have a clone
     or fork of the origin repository in order to have source-code control
     of your changes, whether or not for contribution back to the origin
     project.
     
  2. In the devBind\ folder, follow the VCbind.txt instructions and
     extract VCbind.zip to the subfolder VCbind\ (i.e., Windows 
     folder location devBind\VCbind\).
     
     The following steps have been employed in the original progression
     of devBind work.  There are many ways to accomplish the same result.
     The key is to always know what files are the latest and what to update 
     from them to assure consistency.
     
  3. Edit the VCbind.bat and VCbind.txt files here in the devBind\ folder.
     Copy modified VCbind.bat files to devBind\VCbind\ for testing and
     confirmation of test cases.  Confirm that the cl.exe compiler can be
     operated and that successful compilations are produced.
    
  4. Wnen done or at a check-point, synchronize VCbind.zip with your work.
  
     4.1 Update VCbind.txt and related documentation and testing material.
  
     4.2 Delete the devBind\VCbind.zip file.
     
     4.2 In the Windows File Explorer, creat a New Compressed (zipped) Folder
         in devBind\.  Name it VCbind.zip.
         
     4.3 Drag the all of the VCbind.zip-intended devBind\ files into the 
         new, empty VCbind.zip, including LICENSE.txt, NOTICE.txt, VCbind.bat,
         and VCbind.txt.
         
  5. Adjust this devBind.txt to reflect any change to the manifest and 
     anything else that needs to be changed to have current documentation.
     
  6. Check-in the modified/new materials under the source-code management
     you are using.  Depending on the state of completion and project
     requirements for thorough testing, contribute back to any project
     this work is on behalf of when that is your objective.


MANIFEST

    .gitignore
        excluding any devBind/VCbind/ working folder from source-code
        version control

    devBind.txt
        this manifest and procedures for developing a VCbind.zip
        for use in source-code construction sets
        
    LICENSE.txt
        Apache License Version 2.0 for inclusion in VCbind.zip
         
    NOTICE.txt
        Notice file for inclusion in VCbind.zip
         
    VCbind.txt
        manifest and description included in VCbind.zip and usable as a
        preview of instructions for extraction and usage.
         
    VCbind.bat
        script included in VCbind.zip that provides the binding operation
        
    VCbind.zip
        under-development version of VCbind.zip archive for dropping into
        Windows command-line construction sets.  

---------1---------2---------3---------4---------5---------6---------7-------*

                       Copyright 2016 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

TODO

 * Add statement about how Toolcraft, TROST, and the ability for anyone
   to confirm the functioning of the VCbind technique, with prerequisite
   preparation.
   
 * Add Dependencies as well as prerequisites.  These are the technical
   dependencies.
   
 * Provide links for the prerequisites.  Also to examples of where VCbind
   is used in cases that are relatively easy to teeth on.
 
 * Filter modes for older VS versions that do not support them.
   
 * Is it meaningful to go as far back as VS2005 (Version 8.0)?
    
 * Need a way to VCunbind as a way to clean up and/or remove an existing
   binding in order to introduce a new one.  There is a form of this in
   the vcvarsall procedure for Version 15.0, but nothing earlier.  There
   still might be an approach in that.
   
 * Verify that the command shell VCbind is called in has local variables
   and unbinding is only local.  This also means that the VCbind endures
   only as long as the single console session.  Confirm this.
   
 * The Microsoft Visual Studio "15" Preview 5 setup is very different than
   for any previous versions.  It is a considerable hack and will not be
   supported as part of a general-use VCbind release.  
   
 * After VCbind 0.1.0 is achieved, use VCbind 0.1.x to include provisional
   support for Microsoft Visual Studio "15" Preview editions until RTM
   happens.  Then take it to VCbind 0.2.0.  
 
 * Put references on creating and using batch scripts somewhere.  There is
   now (Windows 10) extensive help files built in, along with more on MSDN.
   There is also the Command Line Admionistrator's Pocket Handbook.
   
 * Verify the VCbind structure with VS2015 and all other current VS 
   Express and Community installs.

 * Verify the structure with cmd.exe, PowerShell, TC, and MSYS2 (POSIX)
   shells and possibly CYGWIN.  It is desirable that these batch scripts work
   from underneath all of those shells.

 * Find references for the prerequisite information.  These will probably be
   in nfoWare ToolCraft or some devtools area.

 * We need a tutorial/HowTo location on nfoWare.com with images and related 
   documentation for the cases that apply here.
   
 * We need to get this far enough to apply in test builds and runs of the
   Adv10 WinCon case.  Don't worry so much about documentation completeness
   until we have the scripts in use.  It is all provisional while Adv10 is
   in 0.0.* development.
   
 * Create a VCbind.zip that is tied to devBind, VCbinder, and such.

 * VCbind.bat can be referenced from anywhere.  It is not necessary to
   change the current working directory in order to employ VCbind.bat.
   Having shortcuts to help with this might be something that should
   be encouraged but not handled in detail here.  That seems like another
   HOWTO to address on nfoWare.
   
 * Do we want VCbind.zip to be signed?  That's not a particularly bad
   idea. Not clear what the best way to accomplish it is that ensures
   use of a proper public key though.
   
 * Provide a checklist of the testing cases that apply to VCbind.bat.
   It should provide a smoke test as well as test cases for confirming
   all operation of the script.  The full testing is needed for a release
   candidate and also the level of testing needs to be accounted for in
   a pull request.  
   
 * VCbind.zip should provide a sample that can be used to verify compilation
   after a successful binding.  This should provide the smoke-test case and
   also demonstrate some things about calling cl.exe with @*.opt parameters.
         
 * A failure of vcvarsall.bat can cause the usage message, which will be
   confusing.  So we must filter the type as well as the toolset.
         
 * VCbind.bat: Add links to locations where more information can be found
   in case the script is (found) separated from VCbind.zip.
   
 * Figure out what config cases work on older Visual Studio versions and
   filter for those if it seems desirable.
   
 * Move the parameter business to VCbind.txt and out of the .bat comments?
 
 * For neatness, it appears that the version should not be in the VCbind.zip
   name.  But it all works better if we know what version it is withoug
   inspecting it.  It also helps if VCbind.zip and the VCbind.txt go
   out of sync.
   
 * The term for cmd.exe is "command shell."  Use that consistently.
   See <https://technet.microsoft.com/en-us/library/bb490954.aspx>.
   We can talk about a console session, but it is running the command 
   shell.
   
 * %PROCESSOR_ARCHITECTURE% is "x86" on 32-bit processors, including Windows
   XP on 32-bit machines.  AMD64 is used on the usual 64-bit processors.  It
   might be useful to filter on these when checking parameters.
   
 * Help provided here on cmd.exe and the Windows Command Shell should also
   point out how much off-line help is built into the shell.
   
 * Need to suggest help cmd and also help setlocal as part of the off-line
   help.
   
 * Add a confirmation checklist with basic smoketest as well as a systematic
   exercise of the script.  
   
 * Consider a script for systematic confirmation of VCbind.bat operation.
 
 * Do we need a little "Hello World" sort of compilation for getting more
   than just eliciting "cl.exe /?" output?  Maybe that is the second smoke
   test, that will be important whenever VCbind.bat is operated from 
   within CygWin or other Unix-style shells.  This is maybe a VCbuild sample.
   
 * There needs to be a tip or example of a handy shortcut for testing,
   etc.  That might also be better in a VCbuild or VCrun (VCcheck?) test.
   
 * The testing and confirmation of VCbind.bat should be included in 
   VCbind.zip, along with a smoke-test procedure.
   
---------1---------2---------3---------4---------5---------6---------7-------*

 0.0.18 2016-11-15-14:37 Implement terse option; refine TODOs 
 0.0.17 2016-11-14-17:48 Included detection and binding for Visual Studio 
        2008 through 2015.  Clean up TODOs that are now resolved.
 0.0.16 2016-11-13-09:55 Tie to nfoWare.com folio d161101, annotate further
 0.0.15 2016-11-08-10:57 VCbind.bat verification of CMDEXTVERSION and
        location introduced.  More TODO thoughts.
 0.0.14 2016-11-08-08:57 Smooth the procedures, review and expand TODOs
 0.0.13 2016-11-05-10:38 Touch-ups. Transpose TODOs from VCbind.bat 0.0.4. 
        Identify need for troubleshooting the maintenance/customization
        procedure.  Use rulers as separators to aid plaintext margin-keeping.
 0.0.12 2016-11-04-10:58 More TODOs - determining when VC vars already set
        and what to advise the user.
 0.0.11 2016-11-03-14:32 Completed sketch for developer use of devBind/
 0.0.10 2016-11-01-25:45 TODOs cleanup. 
  0.0.9 2016-10-31-11:43 Complete some TODOs, tweak others.
  0.0.8 2016-10-31-09:27 Consolidate TODOs here and start fleshing out
        the VCbind.txt file.
  0.0.7 2016-10-30-10:30 Capture VC-scraps and update TODOs, readying 
        for confirmation and provisional use for Adv10 WinCon development.
  0.0.6 2016-10-28-10:51 Touch-ups and expanded TODOs
  0.0.5 2016-10-27-11:54 Setup for progressive improvement of VCbind.zip
        versions.
  0.0.4 2016-10-26-11:50 Adjust to new Adv10/dev/VCbinder/devBind/ location.
  0.0.3 2016-10-26-11:07 Rename to devBind.txt for the devBind/ folder.
  0.0.2 2016-10-25-13:56 Introduce Initial files
        Expand the manifest and provide existing files for morphing into 
        a polished VCbind.zip set.
  0.0.1 2016-10-24-18:32 Add LICENSE.txt and NOTICE.txt in support of the
        independent redistribution VCbind code in VCbind.zip.
  0.0.0 2016-10-24-18:11 Initial Placeholder as part of VCbind/dev/ folder
        setup.
 
                        *** end of devBind.txt ***